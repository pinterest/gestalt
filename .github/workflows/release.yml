name: Release

on:
  push:
    paths-ignore:
      - 'CHANGELOG.md'
    tags-ignore:
      - '**'
    branches:
      - master

jobs:
  release:
    name: Release gestalt
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'Version bump:') == false && github.repository == 'pinterest/gestalt'
    steps:
      - uses: octokit/graphql-action@v2.0.0
        id: query_labels
        with:
          query: |
            query labels($owner:String!, $name:String!, $oid:GitObjectID!) {
              repository(owner: $owner, name: $name) {
                object(oid: $oid) {
                  ... on Commit {
                    message
                    associatedPullRequests(first: 1) {
                      edges {
                        node {
                          title
                          labels(first: 5) {
                            edges {
                              node {
                                name
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          owner: ${{ github.event.repository.owner.name }}
          name: ${{ github.event.repository.name }}
          oid: ${{ github.event.head_commit.id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract labels
        id: extract_labels
        env:
          JSON_DATA: ${{ steps.query_labels.outputs.data }}
        run: |
          LABELS=$(echo "${JSON_DATA}" | jq '.repository.object.associatedPullRequests.edges[0].node.labels.edges[].node.name' | tr '\n' ', ')
          echo "::set-output name=labels::${LABELS}"
      - name: Checkout the repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Setup npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.ALBERTO_NPM_PERSONAL_TOKEN }}
        run: echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" >> ~/.npmrc
      - name: Install dependencies
        run: yarn install
      - name: Setup GitHub access tokens
        env:
          ALBERTO_GITHUB_PERSONAL_TOKEN: ${{ secrets.ALBERTO_GITHUB_PERSONAL_TOKEN }}
        run: |
          echo "machine github.com" >> ~/.netrc
          echo "login AlbertCarreras" >> ~/.netrc
          echo "password $ALBERTO_GITHUB_PERSONAL_TOKEN" >> ~/.netrc
      - name: Release Steps
        id: release
        run: ./scripts/releaseSteps.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LABELS: ${{ steps.extract_labels.outputs.labels }}
      - name: Publish to npm
        run: |
          cd packages/gestalt-design-tokens
          yarn publish --registry=https://registry.npmjs.org --no-git-tag-version --new-version ${{ steps.release.outputs.VERSION }}
          cd ../gestalt
          yarn publish --registry=https://registry.npmjs.org --no-git-tag-version --new-version ${{ steps.release.outputs.VERSION }}
          cd ../gestalt-datepicker
          yarn publish --registry=https://registry.npmjs.org --no-git-tag-version --new-version ${{ steps.release.outputs.VERSION }}
          cd ../eslint-plugin-gestalt
          yarn publish --registry=https://registry.npmjs.org --no-git-tag-version --new-version ${{ steps.release.outputs.VERSION }}
          cd ../gestalt-charts
          yarn publish --registry=https://registry.npmjs.org --no-git-tag-version --new-version ${{ steps.release.outputs.VERSION }}
          cd ../stylelint-plugin-gestalt
          yarn publish --registry=https://registry.npmjs.org --no-git-tag-version --new-version ${{ steps.release.outputs.VERSION }}
      - name: Trigger VSCode Gestalt release
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.ALBERTO_GITHUB_PERSONAL_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'pinterest',
              repo: 'vscode-gestalt',
              workflow_id: 'publish.yml',
              ref: 'main'
            });
