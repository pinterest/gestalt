.default {
  background-color: var(--color-background-tag-primary-default);
}

.default:focus {
  border: 2px solid var(--sema-color-border-focus-inner-default);
  border-radius: 8px;
  outline: 2px solid var(--color-border-focus);
  outline-offset: 0;
  outline-offset: 0;
}

.default:hover {
  background-color: var(--color-background-tag-primary-hover);
}

.default:active {
  background-color: var(--color-background-tag-primary-active);
}

.defaultVR {
  background-color: var(--color-background-tag-primary-default);
}

.defaultVR:hover {
  background-color: var(--color-background-tag-primary-hover);
}

.defaultVR:active {
  background-color: var(--color-background-tag-primary-active);
}

.error {
  background-color: var(--color-background-tag-error-default);
}

.error:hover {
  background-color: var(--color-background-tag-error-hover);
}

.error:active {
  background-color: var(--color-background-tag-error-active);
}

.errorVR {
  background-color: var(--sema-color-background-error-weak);
}

.errorVR:hover {
  background-color: var(--sema-color-hover-background-error-weak);
}

.errorVR:active {
  background-color: var(--sema-color-pressed-background-error-weak);
}

.warning {
  background-color: var(--color-background-tag-warning-default);
}

.warning:hover {
  background-color: var(--color-background-tag-warning-hover);
}

.warning:active {
  background-color: var(--color-background-tag-warning-active);
}

.warningVR {
  background-color: var(--color-background-warning-weak);
}

.warningVR:hover {
  background-color: var(--sema-color-hover-background-warning-weak);
}

.warningVR:active {
  background-color: var(--sema-color-pressed-background-warning-weak);
}

.selected {
  background-color: var(--color-background-selected-base);
}

.closeButton {
  composes: noBorder from "./Borders.css";
  composes: pointer from "./Cursor.css";
  composes: paddingX0 from "./boxWhitespace.css";
  composes: paddingY0 from "./boxWhitespace.css";
  height: 100%;
  outline: none;
  position: absolute;
}

.clickButtonVR {
  composes: noBorder from "./Borders.css";
  composes: pointer from "./Cursor.css";
  border-radius: var(--sema-rounding-200, 8px);
  margin-right: 2px;
  outline: none;
}

.onClickmd{
  border-radius: var(--sema-rounding-200, 8px);
  height: 32px;
  margin-left: -7px;
  padding-bottom:4px;
  padding-left: 6px;
  padding-top: 4px;
}

.onClicksm{
  border-radius: var(--sema-rounding-200, 8px);
  height: 24px;
  margin-left: -7px;
  padding-bottom:4px;
  padding-top: 4px;
}

.onClicklg{
  border-radius: var(--sema-rounding-200, 8px);
  height: 48px;
  margin-left: -11px;
  padding-left: 12px;
}

html[dir="rtl"] .closeButton {
  left: 0;
  right: unset;
  top: 0;
}

html:not([dir="rtl"]) .closeButton {
  left: unset;
  right: 0;
  top: 0;
}

.sm {
  width: 20px;
}

.md {
  width: 24px;
}

.lg {
  width: 32px;
}

html[dir="rtl"] .sm {
  border-radius: var(--rounding-100) 0 0 var(--rounding-100);
}

html:not([dir="rtl"]) .sm {
  border-radius: 8px;
}

html[dir="rtl"] .md {
  border-radius: var(--rounding-200) 0 0 var(--rounding-200);
}

html:not([dir="rtl"]) .md {
  border-radius: 8px;
}

html[dir="rtl"] .lg {
  border-radius: var(--rounding-300) 0 0 var(--rounding-300);
}

html:not([dir="rtl"]) .lg {
  border-radius: 8px;
}
