// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<tr
  className="hoverShadeGray"
>
  <td
    className="td"
    style={
      Object {
        "left": undefined,
        "right": undefined,
      }
    }
  >
    <button
      aria-controls="expandableRow"
      aria-expanded={false}
      aria-label="Expand"
      className="parentButton"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      tabIndex={0}
      type="button"
    >
      <div
        className="button tapTransition enabled"
      >
        <div
          className="pog roundingCircle transparent"
          style={
            Object {
              "height": 24,
              "width": 24,
            }
          }
        >
          <svg
            aria-hidden={true}
            aria-label=""
            className="default icon iconBlock"
            height={12}
            role="img"
            viewBox="0 0 24 24"
            width={12}
          >
            <path
              d="test-file-stub"
            />
          </svg>
        </div>
      </div>
    </button>
  </td>
  <div>
    row cells
  </div>
</tr>
`;

exports[`renders correctly with explicit hover 1`] = `
<tr
  className="hoverShadeGray"
>
  <td
    className="td"
    style={
      Object {
        "left": undefined,
        "right": undefined,
      }
    }
  >
    <button
      aria-controls="expandableRow"
      aria-expanded={false}
      aria-label="Expand"
      className="parentButton"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      tabIndex={0}
      type="button"
    >
      <div
        className="button tapTransition enabled"
      >
        <div
          className="pog roundingCircle transparent"
          style={
            Object {
              "height": 24,
              "width": 24,
            }
          }
        >
          <svg
            aria-hidden={true}
            aria-label=""
            className="default icon iconBlock"
            height={12}
            role="img"
            viewBox="0 0 24 24"
            width={12}
          >
            <path
              d="test-file-stub"
            />
          </svg>
        </div>
      </div>
    </button>
  </td>
  <div>
    row cells
  </div>
</tr>
`;

exports[`renders correctly without hover 1`] = `
<tr
  className=""
>
  <td
    className="td"
    style={
      Object {
        "left": undefined,
        "right": undefined,
      }
    }
  >
    <button
      aria-controls="expandableRow"
      aria-expanded={false}
      aria-label="Expand"
      className="parentButton"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchCancel={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      tabIndex={0}
      type="button"
    >
      <div
        className="button tapTransition enabled"
      >
        <div
          className="pog roundingCircle transparent"
          style={
            Object {
              "height": 24,
              "width": 24,
            }
          }
        >
          <svg
            aria-hidden={true}
            aria-label=""
            className="default icon iconBlock"
            height={12}
            role="img"
            viewBox="0 0 24 24"
            width={12}
          >
            <path
              d="test-file-stub"
            />
          </svg>
        </div>
      </div>
    </button>
  </td>
  <div>
    row cells
  </div>
</tr>
`;
