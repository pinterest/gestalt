:root {
  --g-size-sm: var(--space-400);
  --g-size-md: var(--space-600);
}

.border {
  composes: borderColorDarkGray from "../Borders.css";
}

.borderSelected {
  composes: borderColorSelected from "../Borders.css";
}

.borderDarkGray {
  composes: borderColorDarkGray from "../Borders.css";
}

.borderDisabled {
  composes: borderColorLightGrayDisabled from "../Borders.css";
}

.borderError {
  composes: borderColorRed from "../Borders.css";
}

.borderHovered {
  composes: borderColorLightGrayHovered from "../Borders.css";
}

.borderRadiusSm {
  composes: rounding1 from "../Borders.css";
}

.borderRadiusMd {
  composes: rounding2 from "../Borders.css";
}

.check {
  composes: block from "../Layout.css";
  composes: borderBox from "../Layout.css";
  composes: flex from "../Layout.css";
  composes: xsItemsCenter from "../Layout.css";
  composes: justifyCenter from "../Layout.css";
  composes: sizeLg from "../Borders.css";
  composes: solid from "../Borders.css";
}

.inputEnabled {
  composes: pointer from "../Cursor.css";
}

.readOnly {
  pointer-events: none;
}

.input {
  composes: absolute from "../Layout.css";
  composes: m0 from "../Whitespace.css";
  appearance: none;
  opacity: 0;
  outline: 0;
}

.sizeSm {
  height: var(--g-size-sm);
  width: var(--g-size-sm);
}

.sizeMd {
  height: var(--g-size-md);
  width: var(--g-size-md);
}
